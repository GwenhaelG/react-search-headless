{"version":3,"sources":["../../src/core/core.js","../../src/components/SearchBox.js","../../src/components/SearchBoxGrouped.js","../../src/components/StyledSearchBox.js","../../src/components/StyledSearchBoxGrouped.js","App.js","../../src/index.js","index.js"],"names":["typeAndValue","object","type","value","Object","err","console","getProp","path","testObject","query","dataItem","searchKeyItem","searchDepth","prop","testObjectFuzzy","filter","data","parameters","searchType","filteredData","testPassed","itemMap","name","metadata","options","includeScore","threshold","minMatchCharLength","filterGrouped","dataKeys","item","returnAll","returnAllGrouped","SearchBox","version","useState","divRef","useRef","handleChange","setValue","suggestions","setResults","onFilter","ref","onBlur","event","document","style","maxHeight","height","width","position","onChange","target","onFocus","placeholder","results","backgroundColor","border","borderRadius","padding","zIndex","overflowY","itemResult","indexResult","key","onClick","onSelect","index","borderBottom","StyledBox","styled","props","StyledSuggestions","StyledSuggestion","StyledSearchBox","variant","fontSize","StyledTitle","StyledSearchBoxGrouped","display","flexDirection","StyledSelect","select","StyledInput","input","dataSet","bodies","isPlanet","dataGrouped","planets","satellites","aroundPlanet","englishName","div","App","useMemo","p","SearchBoxGrouped","component","dataType","searchKeys","minCar","fuzzySensibility","setParameters","useEffect","minHeight","justifyContent","flexWrap","margin","marginBottom","minWidth","borderRight","marginTop","alignItems","marginRight","split","min","flexGrow","wordBreak","color","alignSelf","renderName","renderMeta","idKey","id","planet","length","map","JSON","stringify","keys","itemKey","indexKey","log","group","overflowWrap","wordWrap","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c2f46065.chunk.js","sourcesContent":["// Import modules\nimport Fuse from 'fuse.js'\n\n/* --  Utilities -- */\n\n// Return type and value of object\nconst typeAndValue = (object) => {\n  try {\n    switch (typeof object) {\n      case 'number':\n        return { type: 'number', value: object.toString() }\n      case 'boolean':\n        return { type: 'boolean', value: object }\n      case 'object':\n        switch (Object.prototype.toString.call(object)) {\n          case '[object Object]':\n            return { type: 'object', value: object }\n          case '[object Array]':\n            return { type: 'array', value: object }\n          case '[object Date]':\n            return { type: 'date', value: object }\n          case '[object Math]':\n            return { type: 'math', value: object }\n          case '[object Null]':\n            return { type: 'null', value: object }\n          default:\n            return { type: 'undefined', value: object }\n        }\n      default:\n        return { type: 'string', value: object }\n    }\n  } catch (err) {\n    console.error(err.message)\n  }\n}\n\n// Analyse the tree, checking for additional depth, and for type and value, whether there is a given path or not\nconst getProp = (object, path) => {\n  try {\n    if (!path) {\n      return typeAndValue(object)\n    } else {\n      if (path.indexOf('.') === -1) {\n        return typeAndValue(object[path])\n      } else {\n        if (object[path.split('.')[0]])\n          return getProp(object[path.split('.')[0]], path.split('.').slice(1))\n        else {\n          return typeAndValue('')\n        }\n      }\n    }\n  } catch (err) {\n    console.error(err.message)\n  }\n}\n\n// Test the object and return an array of true or false, one entry per object tested\nconst testObject = (query, dataItem, searchKeyItem, searchDepth) => {\n  try {\n    const prop = getProp(dataItem, searchKeyItem)\n    switch (prop.type) {\n      case 'number':\n        return prop.value.toLowerCase().indexOf(query.toLowerCase()) !== -1\n          ? true\n          : false\n      case 'string':\n        return prop.value.toLowerCase().indexOf(query.toLowerCase()) !== -1\n          ? true\n          : false\n      case 'object':\n        return !searchDepth || searchDepth > 0\n          ? Object.keys(prop.value)\n              .map((searchKeyItem) =>\n                testObject(\n                  query,\n                  prop.value,\n                  searchKeyItem,\n                  searchDepth ? searchDepth - 1 : 1\n                )\n              )\n              .includes(true)\n            ? true\n            : false\n          : false\n      case 'array':\n        return !searchDepth || searchDepth > 0\n          ? prop.value\n              .map((dataItem) =>\n                testObject(\n                  query,\n                  dataItem,\n                  null,\n                  searchDepth ? searchDepth - 1 : 1\n                )\n              )\n              .includes(true)\n            ? true\n            : false\n          : false\n      default:\n        return false\n    }\n  } catch (err) {\n    console.error(err.message)\n  }\n}\n\n// Test the object and return an array of true or false, one entry per object tested\nconst testObjectFuzzy = (\n  query,\n  dataItem,\n  searchKeyItem,\n  searchDepth,\n  fuseOptions\n) => {\n  try {\n    const prop = getProp(dataItem, searchKeyItem)\n    switch (prop.type) {\n      case 'number':\n        return new Fuse([prop.value.toLowerCase()], fuseOptions).search(query)\n          .length !== 0\n          ? true\n          : false\n      case 'string':\n        return new Fuse([prop.value.toLowerCase()], fuseOptions).search(query)\n          .length !== 0\n          ? true\n          : false\n      case 'object':\n        return !searchDepth || searchDepth > 0\n          ? Object.keys(prop.value)\n              .map((searchKeyItem) =>\n                testObjectFuzzy(\n                  query,\n                  prop.value,\n                  searchKeyItem,\n                  searchDepth ? searchDepth - 1 : 1,\n                  fuseOptions\n                )\n              )\n              .includes(true)\n            ? true\n            : false\n          : false\n      case 'array':\n        return !searchDepth || searchDepth > 0\n          ? prop.value\n              .map((dataItem) =>\n                testObjectFuzzy(\n                  query,\n                  dataItem,\n                  null,\n                  searchDepth ? searchDepth - 1 : 1,\n                  fuseOptions\n                )\n              )\n              .includes(true)\n            ? true\n            : false\n          : false\n      default:\n        return false\n    }\n  } catch (err) {\n    console.error(err.message)\n  }\n}\n\nexport const filter = (data, parameters, searchType, query) => {\n  try {\n    let filteredData\n    switch (searchType) {\n      case 'strict':\n        filteredData = data\n          .filter((dataItem) => {\n            let testPassed\n            parameters.searchKeys\n              ? (testPassed = parameters.searchKeys.map(\n                  (searchKeyItem) =>\n                    query &&\n                    (parameters.minCar\n                      ? query.length > parameters.minCar\n                      : true) &&\n                    testObject(query, dataItem, searchKeyItem)\n                ))\n              : (testPassed = Object.keys(dataItem).map(\n                  (searchKeyItem) =>\n                    query &&\n                    (parameters.minCar\n                      ? query.length > parameters.minCar\n                      : true) &&\n                    testObject(\n                      query,\n                      dataItem,\n                      searchKeyItem,\n                      parameters.searchDepth\n                    )\n                ))\n            return testPassed.includes(true) ? true : false\n          })\n          .map((itemMap) => ({\n            value: itemMap[parameters.idKey],\n            name: parameters.renderName(itemMap),\n            metadata: parameters.renderMeta(itemMap)\n          }))\n        break\n      case 'fuzzy':\n        const options = {\n          includeScore: parameters.includeScore\n            ? parameters.includeScore\n            : false,\n          threshold: parameters.fuzzySensibility\n            ? parameters.fuzzySensibility\n            : 0.5,\n          minMatchCharLength: parameters.minCar ? parameters.minCar : 0\n        }\n        filteredData = data\n          .filter((dataItem) => {\n            let testPassed\n            parameters.searchKeys\n              ? (testPassed = parameters.searchKeys.map(\n                  (searchKeyItem) =>\n                    query &&\n                    testObjectFuzzy(\n                      query,\n                      dataItem,\n                      searchKeyItem,\n                      parameters.searchDepth,\n                      options\n                    )\n                ))\n              : (testPassed = Object.keys(dataItem).map(\n                  (searchKeyItem) =>\n                    query &&\n                    testObjectFuzzy(\n                      query,\n                      dataItem,\n                      searchKeyItem,\n                      parameters.searchDepth,\n                      options\n                    )\n                ))\n            return testPassed.includes(true) ? true : false\n          })\n          .map((itemMap) => ({\n            value: itemMap[parameters.idKey],\n            name: parameters.renderName(itemMap),\n            metadata: parameters.renderMeta(itemMap)\n          }))\n      default:\n        break\n    }\n    return filteredData\n  } catch (err) {\n    console.error(err.message)\n  }\n}\n\n// Parse query and return filtered results as groups\nexport const filterGrouped = (data, parameters, searchType, query) => {\n  try {\n    // Filter the data set by keys provided\n    const dataKeys = Object.keys(data)\n    let filteredData = {}\n    switch (searchType) {\n      case 'strict':\n        dataKeys.forEach((item) => {\n          // If parameters available\n          if (parameters[item]) {\n            filteredData = {\n              ...filteredData,\n              [item]: data[item]\n                .filter((dataItem) => {\n                  let testPassed\n                  parameters[item].searchKeys\n                    ? (testPassed = parameters[item].searchKeys.map(\n                        (searchKeyItem) =>\n                          query &&\n                          (parameters[item].minCar\n                            ? query.length > parameters[item].minCar\n                            : true) &&\n                          testObject(query, dataItem, searchKeyItem)\n                      ))\n                    : (testPassed = Object.keys(dataItem).map(\n                        (searchKeyItem) =>\n                          query &&\n                          (parameters[item].minCar\n                            ? query.length > parameters[item].minCar\n                            : true) &&\n                          testObject(\n                            query,\n                            dataItem,\n                            searchKeyItem,\n                            parameters[item].searchDepth\n                          )\n                      ))\n                  return testPassed.includes(true) ? true : false\n                })\n                .map((itemMap) => ({\n                  value: itemMap[parameters[item].idKey],\n                  name: parameters[item].renderName(itemMap),\n                  metadata: parameters[item].renderMeta(itemMap)\n                }))\n            }\n          }\n        })\n        break\n      case 'fuzzy':\n        dataKeys.forEach((item) => {\n          const options = {\n            includeScore: parameters[item].includeScore\n              ? parameters[item].includeScore\n              : false,\n            threshold: parameters[item].fuzzySensibility\n              ? parameters[item].fuzzySensibility\n              : 0.5,\n            minMatchCharLength: parameters[item].minCar\n              ? parameters[item].minCar\n              : 0\n          }\n          // If parameters available\n          if (parameters[item]) {\n            filteredData = {\n              ...filteredData,\n              [item]: data[item]\n                .filter((dataItem) => {\n                  let testPassed\n                  parameters[item].searchKeys\n                    ? (testPassed = parameters[item].searchKeys.map(\n                        (searchKeyItem) =>\n                          query &&\n                          testObjectFuzzy(\n                            query,\n                            dataItem,\n                            searchKeyItem,\n                            options\n                          )\n                      ))\n                    : (testPassed = Object.keys(dataItem).map(\n                        (searchKeyItem) =>\n                          query &&\n                          testObjectFuzzy(\n                            query,\n                            dataItem,\n                            searchKeyItem,\n                            parameters[item].searchDepth,\n                            options\n                          )\n                      ))\n                  return testPassed.includes(true) ? true : false\n                })\n                .map((itemMap) => ({\n                  value: itemMap[parameters[item].idKey],\n                  name: parameters[item].renderName(itemMap),\n                  metadata: parameters[item].renderMeta(itemMap)\n                }))\n            }\n          }\n        })\n        break\n      default:\n        break\n    }\n    return filteredData\n  } catch (err) {\n    console.error(err.message)\n  }\n}\n\n// Return all results\nexport const returnAll = (data, parameters) => {\n  try {\n    let filteredData\n    filteredData = data.map((itemMap) => ({\n      value: itemMap[parameters.idKey],\n      name: parameters.renderName(itemMap),\n      metadata: parameters.renderMeta(itemMap)\n    }))\n    return filteredData\n  } catch (err) {\n    console.error(err.message)\n  }\n}\n\n// Return all results - grouped\nexport const returnAllGrouped = (data, parameters) => {\n  try {\n    let filteredData = {}\n    Object.keys(data).forEach((item) => {\n      if (parameters[item]) {\n        filteredData = {\n          ...filteredData,\n          [item]: data[item].map((itemMap) => ({\n            value: itemMap[parameters[item].idKey],\n            name: parameters[item].renderName(itemMap),\n            metadata: parameters[item].renderMeta(itemMap)\n          }))\n        }\n      }\n    })\n    return filteredData\n  } catch (err) {\n    console.error(err.message)\n  }\n}\n","import React, { useState, useRef } from 'react'\nimport { filter, returnAll } from '../core/core'\n\n// Unstyled component\nconst SearchBox = ({\n  data,\n  parameters,\n  suggestions,\n  onFilter,\n  onSelect,\n  searchType,\n  version\n}) => {\n  const [results, setResults] = useState()\n  const [value, setValue] = useState('')\n  const divRef = useRef(null)\n\n  const handleBlur = () => {\n    function handleClickOutside(event) {\n      if (\n        divRef.current &&\n        results &&\n        suggestions &&\n        !divRef.current.contains(event.target)\n      ) {\n        setResults()\n      }\n    }\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }\n\n  const handleChange = (query) => {\n    try {\n      // Set the input value\n      setValue(query)\n      let filteredData = {}\n\n      if (query) {\n        filteredData = filter(data, parameters, searchType, query)\n      } else {\n        filteredData = returnAll(data, parameters)\n      }\n\n      if (suggestions && query) {\n        setResults(filteredData)\n      } else {\n        onFilter(filteredData)\n      }\n    } catch (err) {\n      console.error(err.message)\n    }\n  }\n\n  return (\n    <div\n      ref={divRef}\n      onBlur={handleBlur}\n      style={{\n        maxHeight: '5vh',\n        height: '5vh',\n        width: '100%',\n        position: 'relative'\n      }}\n    >\n      <input\n        version={version}\n        type='search'\n        value={value}\n        onChange={({ target: { value } }) => {\n          handleChange(value)\n        }}\n        onFocus={({ target: { value } }) => {\n          handleChange(value)\n        }}\n        placeholder={'Type anything...'}\n      />\n      {results && suggestions && (\n        <div\n          style={{\n            backgroundColor: 'white',\n            border: '1px solid black',\n            borderRadius: '5px',\n            padding: '10px',\n            zIndex: 2000,\n            maxHeight: '50vh',\n            overflowY: 'scroll'\n          }}\n        >\n          {results.length > 0 &&\n            results.map((itemResult, indexResult) => (\n              <div\n                key={indexResult}\n                onClick={() => {\n                  onSelect(itemResult)\n                  setResults(null)\n                }}\n              >\n                <p>{itemResult.name}</p>\n              </div>\n            ))}\n          {results.length === 0 && <p>No results</p>}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default SearchBox\n","import React, { useState, useRef } from 'react'\nimport { filterGrouped, returnAllGrouped } from '../core/core'\n\n// Unstyled component\nconst SearchBox = ({\n  data,\n  parameters,\n  suggestions,\n  onFilter,\n  onSelect,\n  searchType,\n  version\n}) => {\n  const [results, setResults] = useState()\n  const [value, setValue] = useState('')\n  const divRef = useRef(null)\n\n  const handleBlur = () => {\n    function handleClickOutside(event) {\n      if (\n        divRef.current &&\n        results &&\n        suggestions &&\n        !divRef.current.contains(event.target)\n      ) {\n        setResults()\n      }\n    }\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }\n\n  const handleChange = (query) => {\n    try {\n      // Set the input value\n      setValue(query)\n      let filteredData = {}\n\n      if (query) {\n        filteredData = filterGrouped(data, parameters, searchType, query)\n      } else {\n        filteredData = returnAllGrouped(data, parameters)\n      }\n\n      if (suggestions && query) {\n        setResults(filteredData)\n      } else {\n        onFilter(filteredData)\n      }\n    } catch (err) {\n      console.error(err.message)\n    }\n  }\n\n  return (\n    <div\n      ref={divRef}\n      onBlur={handleBlur}\n      style={{\n        maxHeight: '5vh',\n        height: '5vh',\n        width: '100%',\n        position: 'relative'\n      }}\n    >\n      <input\n        version={version}\n        type='search'\n        value={value}\n        onChange={({ target: { value } }) => {\n          handleChange(value)\n        }}\n        onFocus={({ target: { value } }) => {\n          handleChange(value)\n        }}\n        placeholder={'Type anything...'}\n      />\n      {results && suggestions && (\n        <div\n          style={{\n            backgroundColor: 'white',\n            border: '1px solid black',\n            borderRadius: '5px',\n            padding: '10px',\n            zIndex: 2000,\n            maxHeight: '50vh',\n            overflowY: 'scroll'\n          }}\n        >\n          {Object.keys(results).map((item, index) => {\n            return (\n              <div key={index}>\n                <div>\n                  <h1 style={{ borderBottom: '1px solid black' }}>{item}</h1>\n                </div>\n                <div>\n                  {results[item].length > 0 &&\n                    results[item].map((itemResult, indexResult) => (\n                      <div\n                        key={indexResult}\n                        onClick={() => {\n                          onSelect(item, itemResult)\n                          setResults(null)\n                        }}\n                      >\n                        <p>{itemResult.name}</p>\n                      </div>\n                    ))}\n                  {results[item].length === 0 && <p>No results</p>}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default SearchBox\n","import React, { useState, useRef } from 'react'\nimport { filter, returnAll } from '../core/core'\nimport styled from 'styled-components'\n\nconst StyledBox = styled.input`\n  font-family: 'Arial';\n  background-color: ${(props) =>\n    props.variant === 'light' ? 'white' : 'black'};\n  color: ${(props) => (props.variant === 'light' ? 'black' : 'white')};\n  border-radius: 20px;\n  display: inline-block;\n  margin-bottom: 0;\n  text-align: left;\n  white-space: nowrap;\n  vertical-align: middle;\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  cursor: text;\n  border: 1px solid\n    ${(props) => (props.variant === 'light' ? 'black' : 'white')};\n  padding: 6px 12px;\n  font-size: 0.875rem;\n  line-height: 1.42857143;\n  box-sizing: border-box;\n  width: 100%;\n  min-height: ${(props) => (props.height ? props.height + 'vh' : 'auto')};\n  min-width: ${(props) => (props.width ? props.width + 'vw' : 'auto')};\n  font-size: ${(props) => (props.fontSize ? props.fontSize + 'px' : 'auto')};\n\n  &:disabled {\n    background-color: ${(props) =>\n      props.variant === 'light' ? 'ghostwhite' : 'lightgrey'};\n    color: ${(props) =>\n      props.variant === 'light' ? 'lightgrey' : 'ghostwhite'};\n  }\n\n  &:hover {\n    box-shadow: 0 4px 8px 0\n        ${(props) =>\n          props.variant === 'light'\n            ? 'rgba(0,0,0,0.2)'\n            : 'rgba(255,255,255,0.2)'},\n      0 6px 20px 0\n        ${(props) =>\n          props.variant === 'light'\n            ? 'rgba(0,0,0,0.2)'\n            : 'rgba(255,255,255,0.2)'};\n  }\n`\n\nconst StyledSuggestions = styled.div`\n  font-family: 'Arial';\n  background-color: ${(props) =>\n    props.variant === 'light' ? 'white' : 'black'};\n  color: ${(props) => (props.variant === 'light' ? 'black' : 'white')};\n  border-radius: 5px;\n  display: inline-block;\n  margin-bottom: 0;\n  text-align: left;\n  white-space: nowrap;\n  vertical-align: middle;\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  cursor: text;\n  border: 1px solid\n    ${(props) => (props.variant === 'light' ? 'black' : 'white')};\n  padding: 10px;\n  line-height: 1.42857143;\n  box-sizing: border-box;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  min-height: ${(props) => (props.height ? props.height + 'vh' : 'auto')};\n  max-height: 50vh;\n  min-width: ${(props) => (props.width ? props.width + 'vw' : 'auto')};\n  z-index: 2000;\n  overflow-y: scroll;\n  font-size: ${(props) => (props.fontSize ? props.fontSize + 'px' : 'auto')};\n\n  &:disabled {\n    background-color: ${(props) =>\n      props.variant === 'light' ? 'ghostwhite' : 'lightgrey'};\n    color: ${(props) =>\n      props.variant === 'light' ? 'lightgrey' : 'ghostwhite'};\n  }\n`\n\nconst StyledSuggestion = styled.div`\n  font-family: 'Arial';\n  background-color: ${(props) =>\n    props.variant === 'light' ? 'white' : 'black'};\n  color: ${(props) => (props.variant === 'light' ? 'black' : 'white')};\n  border-radius: 5px;\n  display: inline-block;\n  margin-bottom: 0;\n  text-align: left;\n  white-space: nowrap;\n  vertical-align: middle;\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  cursor: text;\n  padding: 10px;\n  margin: 10px;\n  line-height: 1.42857143;\n  box-sizing: border-box;\n  z-index: 2000;\n  font-size: ${(props) => (props.fontSize ? props.fontSize + 'px' : 'auto')};\n\n  &:disabled {\n    background-color: ${(props) =>\n      props.variant === 'light' ? 'ghostwhite' : 'lightgrey'};\n    color: ${(props) =>\n      props.variant === 'light' ? 'lightgrey' : 'ghostwhite'};\n  }\n\n  &:hover {\n    cursor: pointer;\n    box-shadow: 0 4px 8px 0\n        ${(props) =>\n          props.variant === 'light'\n            ? 'rgba(0,0,0,0.2)'\n            : 'rgba(255,255,255,0.2)'},\n      0 6px 20px 0\n        ${(props) =>\n          props.variant === 'light'\n            ? 'rgba(0,0,0,0.2)'\n            : 'rgba(255,255,255,0.2)'};\n  }\n`\n\n// Styled component\nconst StyledSearchBox = ({\n  data,\n  parameters,\n  suggestions,\n  onFilter,\n  onSelect,\n  searchType,\n  variant,\n  height,\n  width,\n  fontSize,\n  placeholder\n}) => {\n  const [results, setResults] = useState()\n  const [value, setValue] = useState('')\n  const divRef = useRef(null)\n\n  const handleBlur = () => {\n    function handleClickOutside(event) {\n      if (\n        divRef.current &&\n        results &&\n        suggestions &&\n        !divRef.current.contains(event.target)\n      ) {\n        setResults()\n      }\n    }\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }\n\n  const handleChange = (query) => {\n    try {\n      // Set the input value\n      setValue(query)\n      let filteredData = {}\n\n      if (query) {\n        filteredData = filter(data, parameters, searchType, query)\n      } else {\n        filteredData = returnAll(data, parameters)\n      }\n\n      if (suggestions && query) {\n        setResults(filteredData)\n      } else {\n        onFilter(filteredData)\n      }\n    } catch (err) {\n      console.error(err.message)\n    }\n  }\n\n  return (\n    <div\n      ref={divRef}\n      onBlur={handleBlur}\n      style={{\n        height: `${height}vh`,\n        width: `${width}vw`,\n        position: 'relative'\n      }}\n    >\n      <StyledBox\n        variant={variant}\n        fontSize={fontSize}\n        height={height}\n        width={width}\n        type='search'\n        value={value}\n        onChange={({ target: { value } }) => {\n          handleChange(value)\n        }}\n        onFocus={({ target: { value } }) => {\n          handleChange(value)\n        }}\n        placeholder={placeholder ? placeholder : ''}\n      />\n      {results && suggestions && (\n        <StyledSuggestions\n          variant={variant}\n          fontSize={fontSize}\n          height={height}\n          width={width}\n        >\n          {results.length > 0 &&\n            results.map((itemResult, indexResult) => (\n              <StyledSuggestion\n                variant={variant}\n                fontSize={fontSize}\n                height={height}\n                width={width}\n                key={indexResult}\n                onClick={() => {\n                  onSelect(itemResult)\n                  setResults(null)\n                }}\n              >\n                <p>{itemResult.name}</p>\n              </StyledSuggestion>\n            ))}\n          {results.length === 0 && <p>No results</p>}\n        </StyledSuggestions>\n      )}\n    </div>\n  )\n}\n\nexport default StyledSearchBox\n","import React, { useState, useRef } from 'react'\nimport { filterGrouped, returnAllGrouped } from '../core/core'\nimport styled from 'styled-components'\n\nconst StyledBox = styled.input`\n  font-family: 'Arial';\n  background-color: ${(props) =>\n    props.variant === 'light' ? 'white' : 'black'};\n  color: ${(props) => (props.variant === 'light' ? 'black' : 'white')};\n  border-radius: 20px;\n  display: inline-block;\n  margin-bottom: 0;\n  text-align: left;\n  white-space: nowrap;\n  vertical-align: middle;\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  cursor: text;\n  border: 1px solid\n    ${(props) => (props.variant === 'light' ? 'black' : 'white')};\n  padding: 6px 12px;\n  font-size: 0.875rem;\n  line-height: 1.42857143;\n  box-sizing: border-box;\n  width: 100%;\n  min-height: ${(props) => (props.height ? props.height + 'vh' : 'auto')};\n  min-width: ${(props) => (props.width ? props.width + 'vw' : 'auto')};\n  font-size: ${(props) => (props.fontSize ? props.fontSize + 'px' : 'auto')};\n\n  &:disabled {\n    background-color: ${(props) =>\n      props.variant === 'light' ? 'ghostwhite' : 'lightgrey'};\n    color: ${(props) =>\n      props.variant === 'light' ? 'lightgrey' : 'ghostwhite'};\n  }\n\n  &:hover {\n    box-shadow: 0 4px 8px 0\n        ${(props) =>\n          props.variant === 'light'\n            ? 'rgba(0,0,0,0.2)'\n            : 'rgba(255,255,255,0.2)'},\n      0 6px 20px 0\n        ${(props) =>\n          props.variant === 'light'\n            ? 'rgba(0,0,0,0.2)'\n            : 'rgba(255,255,255,0.2)'};\n  }\n`\n\nconst StyledSuggestions = styled.div`\n  font-family: 'Arial';\n  background-color: ${(props) =>\n    props.variant === 'light' ? 'white' : 'black'};\n  color: ${(props) => (props.variant === 'light' ? 'black' : 'white')};\n  border-radius: 5px;\n  display: inline-block;\n  margin-bottom: 0;\n  text-align: left;\n  white-space: nowrap;\n  vertical-align: middle;\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  cursor: text;\n  border: 1px solid\n    ${(props) => (props.variant === 'light' ? 'black' : 'white')};\n  padding: 10px;\n  line-height: 1.42857143;\n  box-sizing: border-box;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  min-height: ${(props) => (props.height ? props.height + 'vh' : 'auto')};\n  max-height: 50vh;\n  min-width: ${(props) => (props.width ? props.width + 'vw' : 'auto')};\n  z-index: 2000;\n  overflow-y: scroll;\n  font-size: ${(props) => (props.fontSize ? props.fontSize + 'px' : 'auto')};\n\n  &:disabled {\n    background-color: ${(props) =>\n      props.variant === 'light' ? 'ghostwhite' : 'lightgrey'};\n    color: ${(props) =>\n      props.variant === 'light' ? 'lightgrey' : 'ghostwhite'};\n  }\n`\n\nconst StyledSuggestion = styled.div`\n  font-family: 'Arial';\n  background-color: ${(props) =>\n    props.variant === 'light' ? 'white' : 'black'};\n  color: ${(props) => (props.variant === 'light' ? 'black' : 'white')};\n  border-radius: 5px;\n  display: inline-block;\n  margin-bottom: 0;\n  text-align: left;\n  white-space: nowrap;\n  vertical-align: middle;\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  cursor: text;\n  padding: 10px;\n  margin: 10px;\n  line-height: 1.42857143;\n  box-sizing: border-box;\n  z-index: 2000;\n  font-size: ${(props) => (props.fontSize ? props.fontSize + 'px' : 'auto')};\n\n  &:disabled {\n    background-color: ${(props) =>\n      props.variant === 'light' ? 'ghostwhite' : 'lightgrey'};\n    color: ${(props) =>\n      props.variant === 'light' ? 'lightgrey' : 'ghostwhite'};\n  }\n\n  &:hover {\n    cursor: pointer;\n    box-shadow: 0 4px 8px 0\n        ${(props) =>\n          props.variant === 'light'\n            ? 'rgba(0,0,0,0.2)'\n            : 'rgba(255,255,255,0.2)'},\n      0 6px 20px 0\n        ${(props) =>\n          props.variant === 'light'\n            ? 'rgba(0,0,0,0.2)'\n            : 'rgba(255,255,255,0.2)'};\n  }\n`\n\nconst StyledTitle = styled.h1`\n  border-bottom: 1px solid black;\n`\n\n// Styled component\nconst StyledSearchBoxGrouped = ({\n  data,\n  parameters,\n  suggestions,\n  onFilter,\n  onSelect,\n  searchType,\n  variant,\n  height,\n  width,\n  fontSize,\n  placeholder\n}) => {\n  const [results, setResults] = useState()\n  const [value, setValue] = useState('')\n  const divRef = useRef(null)\n\n  const handleBlur = () => {\n    function handleClickOutside(event) {\n      if (\n        divRef.current &&\n        results &&\n        suggestions &&\n        !divRef.current.contains(event.target)\n      ) {\n        setResults()\n      }\n    }\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }\n\n  const handleChange = (query) => {\n    try {\n      // Set the input value\n      setValue(query)\n      let filteredData = {}\n\n      if (query) {\n        filteredData = filterGrouped(data, parameters, searchType, query)\n      } else {\n        filteredData = returnAllGrouped(data, parameters)\n      }\n\n      if (suggestions && query) {\n        setResults(filteredData)\n      } else {\n        onFilter(filteredData)\n      }\n    } catch (err) {\n      console.error(err.message)\n    }\n  }\n\n  return (\n    <div\n      ref={divRef}\n      onBlur={handleBlur}\n      style={{\n        height: `${height}vh`,\n        width: `${width}vw`,\n        position: 'relative'\n      }}\n    >\n      <StyledBox\n        variant={variant}\n        fontSize={fontSize}\n        height={height}\n        width={width}\n        type='search'\n        value={value}\n        onChange={({ target: { value } }) => {\n          handleChange(value)\n        }}\n        onFocus={({ target: { value } }) => {\n          handleChange(value)\n        }}\n        placeholder={placeholder ? placeholder : ''}\n      />\n      {results && suggestions && (\n        <StyledSuggestions\n          variant={variant}\n          fontSize={fontSize}\n          height={height}\n          width={width}\n        >\n          {Object.keys(results).map((item, index) => {\n            return (\n              <div\n                style={{ display: 'flex', flexDirection: 'row' }}\n                key={index}\n              >\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <StyledTitle>{item}</StyledTitle>\n                  {results[item].length > 0 &&\n                    results[item].map((itemResult, indexResult) => (\n                      <StyledSuggestion\n                        variant={variant}\n                        fontSize={fontSize}\n                        height={height}\n                        width={width}\n                        key={indexResult}\n                        onClick={() => {\n                          onSelect(itemResult)\n                          setResults(null)\n                        }}\n                      >\n                        <p>{itemResult.name}</p>\n                      </StyledSuggestion>\n                    ))}\n                  {results[item].length === 0 && <p>No results</p>}\n                </div>\n              </div>\n            )\n          })}\n        </StyledSuggestions>\n      )}\n    </div>\n  )\n}\n\nexport default StyledSearchBoxGrouped\n","import React, { useState, useEffect } from 'react'\nimport { useSearch } from 'react-search-headless'\nimport dataSet from './data.json'\nimport styled from 'styled-components'\n\nconst StyledSelect = styled.select`\n  padding: 8px;\n  display: block;\n  border: none;\n  border-bottom: 1px solid #ccc;\n  width: 100%;\n  height: 100%;\n  text-align-last: right;\n`\n\nconst StyledInput = styled.input`\n  padding: 8px;\n  display: block;\n  border: none;\n  border-bottom: 1px solid #ccc;\n  width: 100%;\n  text-align: right;\n`\n\n// The data\nconst data = dataSet.bodies.filter((item) => item.isPlanet === true)\n\n// The data\nconst dataGrouped = {\n  planets: dataSet.bodies.filter((item) => item.isPlanet === true),\n  satellites: dataSet.bodies\n    .filter((item) => item.isPlanet === false && item.aroundPlanet)\n    .filter((item) => item.englishName)\n}\n\nconst StyledSuggestion = styled.div`\n  font-family: 'Arial';\n  background-color: ${(props) =>\n    props.variant === 'light' ? 'white' : 'black'};\n  color: ${(props) => (props.variant === 'light' ? 'black' : 'white')};\n  border-radius: 5px;\n  display: inline-block;\n  margin-bottom: 0;\n  text-align: left;\n  white-space: nowrap;\n  vertical-align: middle;\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  cursor: text;\n  padding: 10px;\n  margin: 10px;\n  line-height: 1.42857143;\n  box-sizing: border-box;\n  z-index: 2000;\n  font-size: ${(props) => (props.fontSize ? props.fontSize + 'px' : 'auto')};\n\n  &:disabled {\n    background-color: ${(props) =>\n      props.variant === 'light' ? 'ghostwhite' : 'lightgrey'};\n    color: ${(props) =>\n      props.variant === 'light' ? 'lightgrey' : 'ghostwhite'};\n  }\n\n  &:hover {\n    cursor: pointer;\n    box-shadow: 0 4px 8px 0\n        ${(props) =>\n          props.variant === 'light'\n            ? 'rgba(0,0,0,0.2)'\n            : 'rgba(255,255,255,0.2)'},\n      0 6px 20px 0\n        ${(props) =>\n          props.variant === 'light'\n            ? 'rgba(0,0,0,0.2)'\n            : 'rgba(255,255,255,0.2)'};\n  }\n`\n\nconst App = () => {\n  const {\n    filter,\n    filterGrouped,\n    SearchBox,\n    SearchBoxGrouped,\n    StyledSearchBox,\n    StyledSearchBoxGrouped,\n    returnAll\n  } = useSearch()\n\n  const [parameters, setParameters] = useState({\n    component: 'styled',\n    searchType: 'fuzzy',\n    dataType: 'grouped',\n    searchKeys: null,\n    searchDepth: null,\n    minCar: null,\n    fuzzySensibility: 0.6,\n    fontSize: 18,\n    height: 5,\n    width: 30,\n    variant: 'light',\n    suggestions: true\n  })\n\n  const [results, setResults] = useState()\n\n  useEffect(() => {\n    setResults(null)\n  }, [parameters])\n\n  return (\n    <div\n      style={{\n        padding: '2vh',\n        backgroundColor: 'rgb(255,255,255)',\n        minHeight: '100vh'\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'center',\n          flexWrap: 'wrap',\n          padding: '2vh 2vw 2vh 2vw',\n          backgroundColor: 'rgb(0,128,128,0.3)',\n          borderRadius: '5px'\n        }}\n      >\n        <h1 style={{ margin: '10px' }}>React Search Headless - live demo</h1>\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          flexWrap: 'nowrap',\n          marginBottom: '5vh'\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            flexWrap: 'wrap',\n            minWidth: '40%',\n            borderRight: '1px solid lightgrey',\n            marginTop: '5px',\n            marginBottom: '5px'\n          }}\n        >\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              margin: '5px'\n            }}\n          >\n            <p style={{ marginRight: '20%' }}>Component</p>\n            <StyledSelect\n              style={{ marginRight: '15px' }}\n              value={parameters.component}\n              onChange={({ target: { value } }) =>\n                setParameters({ ...parameters, component: value })\n              }\n            >\n              <option value='hooks'>Custom, using hooks</option>\n              <option value='unstyled'>Unstyled Searchbox</option>\n              <option value='styled'>Styled Searchbox</option>\n            </StyledSelect>\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              margin: '5px'\n            }}\n          >\n            <p style={{ marginRight: '20%' }}>Search type</p>\n            <StyledSelect\n              style={{ marginRight: '15px' }}\n              value={parameters.searchType}\n              onChange={({ target: { value } }) =>\n                setParameters({ ...parameters, searchType: value })\n              }\n            >\n              <option value='strict'>Strict</option>\n              <option value='fuzzy'>Fuzzy</option>\n            </StyledSelect>\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              margin: '5px'\n            }}\n          >\n            <p style={{ marginRight: '20%' }}>Dataset type</p>\n            <StyledSelect\n              style={{ marginRight: '15px' }}\n              value={parameters.dataType}\n              onChange={({ target: { value } }) =>\n                setParameters({ ...parameters, dataType: value })\n              }\n            >\n              <option value='simple'>Simple</option>\n              <option value='grouped'>Grouped</option>\n            </StyledSelect>\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              margin: '5px'\n            }}\n          >\n            <p style={{ marginRight: '20%' }}>Search Keys</p>\n            <StyledSelect\n              style={{ marginRight: '15px' }}\n              value={parameters.searchKeys ? parameters.searchKeys : ''}\n              onChange={({ target: { value } }) =>\n                setParameters({\n                  ...parameters,\n                  searchKeys: value === '' ? null : value.split(',')\n                })\n              }\n            >\n              <option value=''>All</option>\n              <option value={['englishName']}>{`['englishName']`}</option>\n              <option\n                value={['englishName', 'aroundPlanet.planet']}\n              >{`['englishName','aroundPlanet.planet']`}</option>\n            </StyledSelect>\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              margin: '5px'\n            }}\n          >\n            <p style={{ marginRight: '20%' }}>Search depth</p>\n            <StyledInput\n              style={{ marginRight: '15px' }}\n              value={parameters.searchDepth ? parameters.searchDepth : ''}\n              min='0'\n              type='number'\n              onChange={({ target: { value } }) =>\n                setParameters({\n                  ...parameters,\n                  searchDepth: value === '' ? null : value\n                })\n              }\n            />\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              margin: '5px'\n            }}\n          >\n            <p style={{ marginRight: '20%' }}>Minimum characters</p>\n            <StyledInput\n              style={{ marginRight: '15px' }}\n              value={parameters.minCar ? parameters.minCar : ''}\n              min='0'\n              type='number'\n              onChange={({ target: { value } }) =>\n                setParameters({\n                  ...parameters,\n                  minCar: value === '' ? null : value\n                })\n              }\n            />\n          </div>\n          {parameters.searchType === 'fuzzy' && (\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                margin: '5px'\n              }}\n            >\n              <p style={{ marginRight: '20%' }}>Fuzzy sensibility</p>\n              <input\n                style={{ marginRight: '15px' }}\n                value={\n                  parameters.fuzzySensibility ? parameters.fuzzySensibility : ''\n                }\n                min='0'\n                type='number'\n                onChange={({ target: { value } }) =>\n                  setParameters({\n                    ...parameters,\n                    fuzzySensibility: value === '' ? null : value\n                  })\n                }\n              />\n            </div>\n          )}\n          {parameters.component === 'styled' && (\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                margin: '5px'\n              }}\n            >\n              <p style={{ marginRight: '20%' }}>Variant</p>\n              <StyledSelect\n                style={{ marginRight: '15px' }}\n                value={parameters.variant ? parameters.variant : 'light'}\n                onChange={({ target: { value } }) =>\n                  setParameters({\n                    ...parameters,\n                    variant: value === '' ? 'light' : value\n                  })\n                }\n              >\n                <option value='light'>Light</option>\n                <option value='dark'>Dark</option>\n              </StyledSelect>\n            </div>\n          )}\n          {parameters.component === 'styled' && (\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                margin: '5px'\n              }}\n            >\n              <p style={{ marginRight: '20%' }}>Suggestions</p>\n              <StyledSelect\n                style={{ marginRight: '15px' }}\n                value={parameters.suggestions}\n                onChange={({ target: { value } }) =>\n                  setParameters({\n                    ...parameters,\n                    suggestions: value === 'true'\n                  })\n                }\n              >\n                <option value={true}>With suggestions</option>\n                <option value={false}>Without suggestions</option>\n              </StyledSelect>\n            </div>\n          )}\n          {parameters.component === 'styled' && (\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                margin: '5px'\n              }}\n            >\n              <p style={{ marginRight: '20%' }}>Font Size (in px)</p>\n              <StyledInput\n                style={{ marginRight: '15px' }}\n                value={parameters.fontSize ? parameters.fontSize : 9}\n                min='9'\n                type='number'\n                onChange={({ target: { value } }) =>\n                  setParameters({\n                    ...parameters,\n                    fontSize: value === '' ? 9 : value\n                  })\n                }\n              />\n            </div>\n          )}\n          {parameters.component === 'styled' && (\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                margin: '5px'\n              }}\n            >\n              <p style={{ marginRight: '20%' }}>Box Height (in vh)</p>\n              <StyledInput\n                style={{ marginRight: '15px' }}\n                value={parameters.height ? parameters.height : 5}\n                min='5'\n                type='number'\n                onChange={({ target: { value } }) =>\n                  setParameters({\n                    ...parameters,\n                    height: value === '' ? 5 : value\n                  })\n                }\n              />\n            </div>\n          )}\n          {parameters.component === 'styled' && (\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                margin: '5px'\n              }}\n            >\n              <p style={{ marginRight: '20%' }}>Box Width (in vw)</p>\n              <StyledInput\n                style={{ marginRight: '15px' }}\n                value={parameters.width ? parameters.width : 5}\n                min='5'\n                type='number'\n                onChange={({ target: { value } }) =>\n                  setParameters({\n                    ...parameters,\n                    width: value === '' ? 5 : value\n                  })\n                }\n              />\n            </div>\n          )}\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            margin: '5vh',\n            flexGrow: 2,\n            wordBreak: 'break-all',\n            alignItems: 'center'\n          }}\n        >\n          <p style={{ wordBreak: 'normal', color: 'darkgrey' }}>\n            Dataset: all planets and satellites in solar system. Try typing\n            'Mars' or 'Ganymede' for example\n          </p>\n          {parameters.component === 'hooks' && (\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                flexWrap: 'wrap'\n              }}\n            >\n              <input\n                placeholder='Search anything...'\n                style={{ marginRight: '15px', alignSelf: 'center' }}\n                onChange={({ target: { value } }) => {\n                  switch (parameters.dataType) {\n                    case 'simple':\n                      setResults(\n                        filter(\n                          data,\n                          {\n                            searchKeys: parameters.searchKeys,\n                            searchDepth: parameters.searchDepth,\n                            minCar: parameters.minCar,\n                            fuzzySensibility: parameters.fuzzySensibility,\n                            renderName: (item) => item.englishName,\n                            renderMeta: (item) => item,\n                            idKey: 'id'\n                          },\n                          parameters.searchType,\n                          value\n                        )\n                      )\n                      break\n                    case 'grouped':\n                      setResults(\n                        filterGrouped(\n                          dataGrouped,\n                          {\n                            planets: {\n                              searchKeys: parameters.searchKeys,\n                              searchDepth: parameters.searchDepth,\n                              minCar: parameters.minCar,\n                              fuzzySensibility: parameters.fuzzySensibility,\n                              renderName: (item) => item.englishName,\n                              renderMeta: (item) => {\n                                const { id, aroundPlanet, ...meta } = item\n                                return meta\n                              },\n                              idKey: 'id'\n                            },\n                            satellites: {\n                              searchKeys: parameters.searchKeys,\n                              searchDepth: parameters.searchDepth,\n                              minCar: parameters.minCar,\n                              fuzzySensibility: parameters.fuzzySensibility,\n                              renderName: (item) =>\n                                `${item.englishName}, satellite of ${\n                                  dataGrouped.planets.filter(\n                                    (planet) =>\n                                      planet.id === item.aroundPlanet.planet\n                                  )[0].englishName\n                                }`,\n                              renderMeta: (item) => {\n                                const { id, aroundPlanet, ...meta } = item\n                                return meta\n                              },\n                              idKey: 'id'\n                            }\n                          },\n                          parameters.searchType,\n                          value\n                        )\n                      )\n                      break\n                    default:\n                      break\n                  }\n                }}\n              />\n              {results && results.length > 0 && (\n                <p>{`${results.length} results`}</p>\n              )}\n              {parameters.dataType === 'simple' &&\n                results &&\n                results.length > 0 &&\n                results.map((item, index) => (\n                  <p key={index}>{JSON.stringify(item.metadata)}</p>\n                ))}\n              {parameters.dataType === 'grouped' &&\n                results &&\n                Object.keys(results).map(\n                  (itemKey, indexKey) =>\n                    results[itemKey].length > 0 && (\n                      <div key={indexKey}>\n                        <h2>{itemKey}</h2>\n                        {results[itemKey].map((item, index) => (\n                          <p key={index}>{JSON.stringify(item)}</p>\n                        ))}\n                      </div>\n                    )\n                )}\n            </div>\n          )}\n          {parameters.component === 'unstyled' &&\n            parameters.dataType === 'simple' && (\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  flexWrap: 'wrap',\n                  alignSelf: 'center'\n                }}\n              >\n                <SearchBox\n                  searchType={parameters.searchType}\n                  data={data}\n                  parameters={{\n                    searchKeys: parameters.searchKeys,\n                    searchDepth: parameters.searchDepth,\n                    minCar: parameters.minCar,\n                    fuzzySensibility: parameters.fuzzySensibility,\n                    renderName: (item) => item.englishName,\n                    renderMeta: (item) => item,\n                    idKey: 'id'\n                  }}\n                  suggestions={true}\n                  onFilter={(value) => {\n                    console.log(value)\n                  }}\n                  onSelect={(group, value) => {\n                    console.log(group, value)\n                  }}\n                />\n              </div>\n            )}\n          {parameters.component === 'unstyled' &&\n            parameters.dataType === 'grouped' && (\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  flexWrap: 'wrap',\n                  alignSelf: 'center'\n                }}\n              >\n                <SearchBoxGrouped\n                  searchType={parameters.searchType}\n                  data={dataGrouped}\n                  parameters={{\n                    planets: {\n                      searchKeys: parameters.searchKeys,\n                      searchDepth: parameters.searchDepth,\n                      minCar: parameters.minCar,\n                      fuzzySensibility: parameters.fuzzySensibility,\n                      renderName: (item) => item.englishName,\n                      renderMeta: (item) => item,\n                      idKey: 'id'\n                    },\n                    satellites: {\n                      searchKeys: parameters.searchKeys,\n                      searchDepth: parameters.searchDepth,\n                      minCar: parameters.minCar,\n                      fuzzySensibility: parameters.fuzzySensibility,\n                      renderName: (item) =>\n                        `${item.englishName}, satellite of ${\n                          dataGrouped.planets.filter(\n                            (planet) => planet.id === item.aroundPlanet.planet\n                          )[0].englishName\n                        }`,\n                      renderMeta: (item) => {\n                        const { id, aroundPlanet, ...meta } = item\n                        return meta\n                      },\n                      idKey: 'id'\n                    }\n                  }}\n                  suggestions={true}\n                  onFilter={(value) => {\n                    console.log(value)\n                  }}\n                  onSelect={(group, value) => {\n                    console.log(group, value)\n                  }}\n                />\n              </div>\n            )}\n          {parameters.component === 'styled' &&\n            parameters.dataType === 'simple' && (\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  flexWrap: 'wrap',\n                  alignSelf: 'center'\n                }}\n              >\n                <StyledSearchBox\n                  searchType={parameters.searchType}\n                  data={data}\n                  style={{ alignSelf: 'center' }}\n                  parameters={{\n                    searchKeys: parameters.searchKeys,\n                    searchDepth: parameters.searchDepth,\n                    minCar: parameters.minCar,\n                    fuzzySensibility: parameters.fuzzySensibility,\n                    renderName: (item) => item.englishName,\n                    renderMeta: (item) => item,\n                    idKey: 'id'\n                  }}\n                  suggestions={parameters.suggestions}\n                  onFilter={(value) => {\n                    setResults(value)\n                  }}\n                  onSelect={(value) => {\n                    console.log(value)\n                  }}\n                  placeholder='Search anything...'\n                  variant={parameters.variant}\n                  height={parameters.height}\n                  width={parameters.width}\n                  fontSize={parameters.fontSize}\n                />\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'start',\n                    flexWrap: 'wrap',\n                    overflowWrap: 'break-word',\n                    wordWrap: 'break-word'\n                  }}\n                >\n                  {!parameters.suggestions &&\n                    !results &&\n                    returnAll(data, {\n                      searchKeys: parameters.searchKeys,\n                      searchDepth: parameters.searchDepth,\n                      minCar: parameters.minCar,\n                      fuzzySensibility: parameters.fuzzySensibility,\n                      renderName: (item) => item.englishName,\n                      renderMeta: (item) => item,\n                      idKey: 'id'\n                    }).map((itemResult, indexResult) => (\n                      <StyledSuggestion\n                        variant={parameters.variant}\n                        fontSize={parameters.fontSize}\n                        height={parameters.height}\n                        width={parameters.width}\n                        key={indexResult}\n                        onClick={() => {}}\n                      >\n                        <h2>{itemResult.name}</h2>\n                      </StyledSuggestion>\n                    ))}\n                  {!parameters.suggestions &&\n                    results &&\n                    !results.planets &&\n                    results.length !== 0 &&\n                    results.map((itemResult, indexResult) => (\n                      <StyledSuggestion\n                        variant={parameters.variant}\n                        fontSize={parameters.fontSize}\n                        height={parameters.height}\n                        width={parameters.width}\n                        key={indexResult}\n                        onClick={() => {}}\n                      >\n                        <h2>{itemResult.name}</h2>\n                      </StyledSuggestion>\n                    ))}\n                </div>\n              </div>\n            )}\n          {parameters.component === 'styled' &&\n            parameters.dataType === 'grouped' && (\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  flexWrap: 'wrap',\n                  alignSelf: 'center'\n                }}\n              >\n                <StyledSearchBoxGrouped\n                  searchType={parameters.searchType}\n                  data={dataGrouped}\n                  style={{ alignSelf: 'center' }}\n                  parameters={{\n                    planets: {\n                      searchKeys: parameters.searchKeys,\n                      searchDepth: parameters.searchDepth,\n                      minCar: parameters.minCar,\n                      fuzzySensibility: parameters.fuzzySensibility,\n                      renderName: (item) => item.englishName,\n                      renderMeta: (item) => item,\n                      idKey: 'id'\n                    },\n                    satellites: {\n                      searchKeys: parameters.searchKeys,\n                      searchDepth: parameters.searchDepth,\n                      minCar: parameters.minCar,\n                      fuzzySensibility: parameters.fuzzySensibility,\n                      renderName: (item) =>\n                        `${item.englishName}, satellite of ${\n                          dataGrouped.planets.filter(\n                            (planet) => planet.id === item.aroundPlanet.planet\n                          )[0].englishName\n                        }`,\n                      renderMeta: (item) => {\n                        const { id, aroundPlanet, ...meta } = item\n                        return meta\n                      },\n                      idKey: 'id'\n                    }\n                  }}\n                  suggestions={parameters.suggestions}\n                  onFilter={(value) => {\n                    setResults(value)\n                  }}\n                  onSelect={(value) => {\n                    console.log(value)\n                  }}\n                  placeholder='Search anything...'\n                  variant={parameters.variant}\n                  height={parameters.height}\n                  width={parameters.width}\n                  fontSize={parameters.fontSize}\n                />\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'start',\n                    flexWrap: 'wrap',\n                    overflowWrap: 'break-word',\n                    wordWrap: 'break-word'\n                  }}\n                >\n                  {!parameters.suggestions &&\n                    results &&\n                    Object.keys(results).map(\n                      (itemResult) =>\n                        results[itemResult].length > 0 &&\n                        results[itemResult].map((item, index) => (\n                          <StyledSuggestion\n                            variant={parameters.variant}\n                            fontSize={parameters.fontSize}\n                            height={parameters.height}\n                            width={parameters.width}\n                            key={index}\n                            onClick={() => {}}\n                          >\n                            <p>{`${itemResult}: ${item.name}`}</p>\n                          </StyledSuggestion>\n                        ))\n                    )}\n                </div>\n              </div>\n            )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// Import modules\nimport React, { useMemo } from 'react'\nimport { filter, filterGrouped, returnAll, returnAllGrouped } from './core/core'\nimport SearchBox from './components/SearchBox'\nimport SearchBoxGrouped from './components/SearchBoxGrouped'\nimport StyledSearchBox from './components/StyledSearchBox'\nimport StyledSearchBoxGrouped from './components/StyledSearchBoxGrouped'\n\n/*  ---  Headless component  ---  */\nexport const useSearch = () => {\n  return useMemo(\n    () => ({\n      filter: (...p) => filter(...p),\n      filterGrouped: (...p) => filterGrouped(...p),\n      returnAll: (...p) => returnAll(...p),\n      returnAllGrouped: (...p) => returnAllGrouped(...p),\n      SearchBox: ({ ...p }) => <SearchBox {...p} />,\n      SearchBoxGrouped: ({ ...p }) => <SearchBoxGrouped {...p} />,\n      StyledSearchBox: ({ ...p }) => <StyledSearchBox {...p} />,\n      StyledSearchBoxGrouped: ({ ...p }) => <StyledSearchBoxGrouped {...p} />\n    }),\n    []\n  )\n}\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}