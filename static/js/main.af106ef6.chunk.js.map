{"version":3,"sources":["../../src/core/core.js","../../src/components/SearchBox.js","../../src/components/SearchBoxGrouped.js","../../src/index.js","App.js","index.js"],"names":["typeAndValue","object","type","value","Object","err","console","getProp","path","testObject","query","dataItem","searchKeyItem","searchDepth","prop","filter","data","parameters","searchType","filteredData","testPassed","itemMap","name","metadata","filterGrouped","dataKeys","item","returnAll","returnAllGrouped","SearchBox","version","useState","divRef","useRef","handleChange","setValue","suggestions","setResults","onFilter","ref","onBlur","event","document","style","maxHeight","height","width","position","onChange","target","onFocus","placeholder","results","backgroundColor","border","borderRadius","padding","zIndex","overflowY","itemResult","indexResult","key","onClick","onSelect","index","borderBottom","useSearch","useMemo","p","SearchBoxGrouped","Suggestions","StyledSuggestions","dataFilter","dataSet","bodies","isPlanet","paramsSearchFilter","searchKeys","renderName","englishName","renderMeta","idKey","dataFilterDepth","paramsSearchFilterDepth","dataFilterGrouped","planets","satellites","aroundPlanet","paramsSearchFilterGrouped","planet","id","minCar","dataSearchBox","paramsSearchBox","dataFilterGroupedDepth","paramsSearchFilterGroupedDepth","dataSearchBoxGrouped","paramsSearchBoxGrouped","App","selectionFilter","setSelectionFilter","resultsFilter","setResultsFilter","resultsFilterDepth","setResultsFilterDepth","selectionFilterGrouped","setSelectionFilterGrouped","resultsFilterGrouped","setResultsFilterGrouped","resultsFilterGroupedDepth","setResultsFilterGroupedDepth","minHeight","marginRight","disabled","length","map","JSON","stringify","marginTop","marginBottom","moons","log","group","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.af106ef6.chunk.js","sourcesContent":["// Import modules\n//import Fuse from 'fuse.js'\n\n/* --  Utilities -- */\n\n// Return type and value of object\nconst typeAndValue = (object) => {\n  try {\n    switch (typeof object) {\n      case 'number':\n        return { type: 'number', value: object.toString() }\n      case 'boolean':\n        return { type: 'boolean', value: object }\n      case 'object':\n        switch (Object.prototype.toString.call(object)) {\n          case '[object Object]':\n            return { type: 'object', value: object }\n          case '[object Array]':\n            return { type: 'array', value: object }\n          case '[object Date]':\n            return { type: 'date', value: object }\n          case '[object Math]':\n            return { type: 'math', value: object }\n          case '[object Null]':\n            return { type: 'null', value: object }\n          default:\n            return object\n        }\n      default:\n        return { type: 'string', value: object }\n    }\n  } catch (err) {\n    console.error(err.message)\n  }\n}\n\n// Analyse the tree, checking for additional depth, and for type and value, whether there is a given path or not\nconst getProp = (object, path) => {\n  try {\n    if (!path) {\n      return typeAndValue(object)\n    } else {\n      if (path.indexOf('.') === -1) {\n        return typeAndValue(object[path])\n      } else {\n        if (object[path.split('.')[0]])\n          return getProp(object[path.split('.')[0]], path.split('.').slice(1))\n        else {\n          object[path.split('.')[0]] = {}\n          return getProp(object[path.split('.')[0]], path.split('.').slice(1))\n        }\n      }\n    }\n  } catch (err) {\n    console.error(err.message)\n  }\n}\n\n// Test the object and return an array of true or false, one entry per object tested\nconst testObject = (query, dataItem, searchKeyItem, searchDepth) => {\n  try {\n    const prop = getProp(dataItem, searchKeyItem)\n    switch (prop.type) {\n      case 'number':\n        return prop.value.toLowerCase().indexOf(query.toLowerCase()) !== -1\n          ? true\n          : false\n      case 'string':\n        return prop.value.toLowerCase().indexOf(query.toLowerCase()) !== -1\n          ? true\n          : false\n      case 'object':\n        return searchDepth > 0\n          ? Object.keys(prop.value)\n              .map((searchKeyItem) =>\n                testObject(\n                  query,\n                  prop.value,\n                  searchKeyItem,\n                  searchDepth ? searchDepth - 1 : 1\n                )\n              )\n              .includes(true)\n            ? true\n            : false\n          : false\n      case 'array':\n        return !searchDepth || searchDepth > 0\n          ? prop.value\n              .map((dataItem) =>\n                testObject(\n                  query,\n                  dataItem,\n                  null,\n                  searchDepth ? searchDepth - 1 : 1\n                )\n              )\n              .includes(true)\n            ? true\n            : false\n          : false\n      default:\n        return false\n    }\n  } catch (err) {\n    console.error(err.message)\n  }\n}\n\nexport const filter = (data, parameters, searchType, query) => {\n  try {\n    let filteredData\n    switch (searchType) {\n      case 'strict':\n        filteredData = data\n          .filter((dataItem) => {\n            let testPassed\n            parameters.searchKeys\n              ? (testPassed = parameters.searchKeys.map(\n                  (searchKeyItem) =>\n                    query && testObject(query, dataItem, searchKeyItem)\n                ))\n              : (testPassed = Object.keys(dataItem).map(\n                  (searchKeyItem) =>\n                    query &&\n                    testObject(\n                      query,\n                      dataItem,\n                      searchKeyItem,\n                      parameters.searchDepth\n                    )\n                ))\n            return testPassed.includes(true) ? true : false\n          })\n          .map((itemMap) => ({\n            value: itemMap[parameters.idKey],\n            name: parameters.renderName(itemMap),\n            metadata: parameters.renderMeta(itemMap)\n          }))\n        break\n      default:\n        break\n    }\n    return filteredData\n  } catch (err) {\n    console.error(err.message)\n  }\n}\n\n// Parse query and return filtered results as groups\nexport const filterGrouped = (data, parameters, searchType, query) => {\n  try {\n    // Filter the data set by keys provided\n    const dataKeys = Object.keys(data)\n    let filteredData = {}\n    switch (searchType) {\n      case 'strict':\n        dataKeys.forEach((item) => {\n          // If parameters available\n          if (parameters[item]) {\n            filteredData = {\n              ...filteredData,\n              [item]: data[item]\n                .filter((dataItem) => {\n                  let testPassed\n                  parameters[item].searchKeys\n                    ? (testPassed = parameters[item].searchKeys.map(\n                        (searchKeyItem) =>\n                          query && testObject(query, dataItem, searchKeyItem)\n                      ))\n                    : (testPassed = Object.keys(dataItem).map(\n                        (searchKeyItem) =>\n                          query &&\n                          testObject(\n                            query,\n                            dataItem,\n                            searchKeyItem,\n                            parameters[item].searchDepth\n                          )\n                      ))\n                  return testPassed.includes(true) ? true : false\n                })\n                .map((itemMap) => ({\n                  value: itemMap[parameters[item].idKey],\n                  name: parameters[item].renderName(itemMap),\n                  metadata: parameters[item].renderMeta(itemMap)\n                }))\n            }\n          }\n        })\n        break\n      /*case 'fuzzy':\n        dataKeys.forEach((key) => {\n          // If parameters available\n          if (parameters[key]) {\n            const options = {\n              includeScore: true,\n              ignoreLocation: true,\n              minMatchCharLength: parameters[key].minCar,\n              shouldSort: true,\n              keys: parameters[key].searchKeys\n            }\n            const fuse = new Fuse(data[key], options)\n            const result = fuse.search(query)\n            filteredData = {\n              ...filteredData,\n              [key]: result.map((itemMap) => ({\n                value: itemMap.item[parameters[key].idKey],\n                name: parameters[key].renderName(itemMap.item),\n                metadata: parameters[key].renderMeta(itemMap.item)\n              }))\n            }\n          }\n        })\n        break*/\n      default:\n        break\n    }\n    return filteredData\n  } catch (err) {\n    console.error(err.message)\n  }\n}\n\n// Return all results\nexport const returnAll = (data, parameters) => {\n  try {\n    let filteredData\n    filteredData = data.map((itemMap) => ({\n      value: itemMap[parameters.idKey],\n      name: parameters.renderName(itemMap),\n      metadata: parameters.renderMeta(itemMap)\n    }))\n    return filteredData\n  } catch (err) {\n    console.error(err.message)\n  }\n}\n\n// Return all results - grouped\nexport const returnAllGrouped = (data, parameters) => {\n  try {\n    let filteredData = {}\n    Object.keys(data).forEach((item) => {\n      if (parameters[item]) {\n        filteredData = {\n          ...filteredData,\n          [item]: data[item].map((itemMap) => ({\n            value: itemMap[parameters[item].idKey],\n            name: parameters[item].renderName(itemMap),\n            metadata: parameters[item].renderMeta(itemMap)\n          }))\n        }\n      }\n    })\n    return filteredData\n  } catch (err) {\n    console.error(err.message)\n  }\n}\n","import React, { useState, useRef } from 'react'\nimport { filter, returnAll } from '../core/core'\n\n// Unstyled component\nconst SearchBox = ({\n  data,\n  parameters,\n  suggestions,\n  onFilter,\n  onSelect,\n  searchType,\n  version\n}) => {\n  const [results, setResults] = useState()\n  const [value, setValue] = useState('')\n  const divRef = useRef(null)\n\n  const handleBlur = () => {\n    function handleClickOutside(event) {\n      if (\n        divRef.current &&\n        results &&\n        suggestions &&\n        !divRef.current.contains(event.target)\n      ) {\n        setResults()\n      }\n    }\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }\n\n  const handleChange = (query) => {\n    try {\n      // Set the input value\n      setValue(query)\n      let filteredData = {}\n\n      if (query) {\n        filteredData = filter(data, parameters, searchType, query)\n      } else {\n        filteredData = returnAll(data, parameters)\n      }\n\n      if (suggestions && query) {\n        setResults(filteredData)\n      } else {\n        onFilter(filteredData)\n      }\n    } catch (err) {\n      console.error(err.message)\n    }\n  }\n\n  return (\n    <div\n      ref={divRef}\n      onBlur={handleBlur}\n      style={{\n        maxHeight: '5vh',\n        height: '5vh',\n        width: '100%',\n        position: 'relative'\n      }}\n    >\n      <input\n        version={version}\n        type='search'\n        value={value}\n        onChange={({ target: { value } }) => {\n          handleChange(value)\n        }}\n        onFocus={({ target: { value } }) => {\n          handleChange(value)\n        }}\n        placeholder={'Type anything...'}\n      />\n      {results && suggestions && (\n        <div\n          style={{\n            backgroundColor: 'white',\n            border: '1px solid black',\n            borderRadius: '5px',\n            padding: '10px',\n            zIndex: 2000,\n            maxHeight: '50vh',\n            overflowY: 'scroll'\n          }}\n        >\n          {results.length > 0 &&\n            results.map((itemResult, indexResult) => (\n              <div\n                key={indexResult}\n                onClick={() => {\n                  onSelect(itemResult)\n                  setResults(null)\n                }}\n              >\n                <p>{itemResult.name}</p>\n              </div>\n            ))}\n          {results.length === 0 && <p>No results</p>}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default SearchBox\n","import React, { useState, useRef } from 'react'\nimport { filterGrouped, returnAllGrouped } from '../core/core'\n\n// Unstyled component\nconst SearchBox = ({\n  data,\n  parameters,\n  suggestions,\n  onFilter,\n  onSelect,\n  searchType,\n  version\n}) => {\n  const [results, setResults] = useState()\n  const [value, setValue] = useState('')\n  const divRef = useRef(null)\n\n  const handleBlur = () => {\n    function handleClickOutside(event) {\n      if (\n        divRef.current &&\n        results &&\n        suggestions &&\n        !divRef.current.contains(event.target)\n      ) {\n        setResults()\n      }\n    }\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }\n\n  const handleChange = (query) => {\n    try {\n      // Set the input value\n      setValue(query)\n      let filteredData = {}\n\n      if (query) {\n        filteredData = filterGrouped(data, parameters, searchType, query)\n      } else {\n        filteredData = returnAllGrouped(data, parameters)\n      }\n\n      if (suggestions && query) {\n        setResults(filteredData)\n      } else {\n        onFilter(filteredData)\n      }\n    } catch (err) {\n      console.error(err.message)\n    }\n  }\n\n  return (\n    <div\n      ref={divRef}\n      onBlur={handleBlur}\n      style={{\n        maxHeight: '5vh',\n        height: '5vh',\n        width: '100%',\n        position: 'relative'\n      }}\n    >\n      <input\n        version={version}\n        type='search'\n        value={value}\n        onChange={({ target: { value } }) => {\n          handleChange(value)\n        }}\n        onFocus={({ target: { value } }) => {\n          handleChange(value)\n        }}\n        placeholder={'Type anything...'}\n      />\n      {results && suggestions && (\n        <div\n          style={{\n            backgroundColor: 'white',\n            border: '1px solid black',\n            borderRadius: '5px',\n            padding: '10px',\n            zIndex: 2000,\n            maxHeight: '50vh',\n            overflowY: 'scroll'\n          }}\n        >\n          {Object.keys(results).map((item, index) => {\n            return (\n              <div key={index}>\n                <div>\n                  <h1 style={{ borderBottom: '1px solid black' }}>{item}</h1>\n                </div>\n                <div>\n                  {results[item].length > 0 &&\n                    results[item].map((itemResult, indexResult) => (\n                      <div\n                        key={indexResult}\n                        onClick={() => {\n                          onSelect(item, itemResult)\n                          setResults(null)\n                        }}\n                      >\n                        <p>{itemResult.name}</p>\n                      </div>\n                    ))}\n                  {results[item].length === 0 && <p>No results</p>}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default SearchBox\n","// Import modules\nimport React, { useMemo } from 'react'\nimport { filter, filterGrouped, returnAll, returnAllGrouped } from './core/core'\nimport SearchBox from './components/SearchBox'\nimport SearchBoxGrouped from './components/SearchBoxGrouped'\n\n/*  ---  Headless component  ---  */\nexport const useSearch = () => {\n  return useMemo(\n    () => ({\n      filter: (...p) => filter(...p),\n      filterGrouped: (...p) => filterGrouped(...p),\n      returnAll: (...p) => returnAll(...p),\n      returnAllGrouped: (...p) => returnAllGrouped(...p),\n      SearchBox: ({ ...p }) => <SearchBox {...p} />,\n      SearchBoxGrouped: ({ ...p }) => <SearchBoxGrouped {...p} />,\n      Suggestions: ({ ...p }) => <Suggestions {...p} />,\n      StyledSuggestions: ({ ...p }) => <StyledSuggestions {...p} />\n    }),\n    []\n  )\n}\n","import React, { useState } from 'react'\nimport { useSearch } from 'react-search-headless'\nimport dataSet from './data.json'\n\n// The data\nconst dataFilter = dataSet.bodies.filter((item) => item.isPlanet === true)\n\n// How you are searching and rendering these data\nconst paramsSearchFilter = {\n  searchKeys: ['englishName'],\n  renderName: (item) => item.englishName,\n  renderMeta: (item) => item,\n  idKey: 'id'\n}\n\n// The data\nconst dataFilterDepth = dataSet.bodies.filter((item) => item.isPlanet === true)\n\n// How you are searching and rendering these data\nconst paramsSearchFilterDepth = {\n  searchDepth: 2,\n  renderName: (item) => item.englishName,\n  renderMeta: (item) => item,\n  idKey: 'id'\n}\n\n// The data\nconst dataFilterGrouped = {\n  planets: dataSet.bodies.filter((item) => item.isPlanet === true),\n  satellites: dataSet.bodies\n    .filter((item) => item.isPlanet === false && item.aroundPlanet)\n    .filter((item) => item.englishName)\n}\n\n// How you are searching and rendering these data\nconst paramsSearchFilterGrouped = {\n  planets: {\n    searchKeys: ['englishName'],\n    renderName: (item) => item.englishName,\n    renderMeta: (item) => item,\n    //minCar: 3,\n    idKey: 'id'\n  },\n  satellites: {\n    searchKeys: ['englishName', 'aroundPlanet.planet'],\n    renderName: (item) =>\n      `${item.englishName}, satellite of ${\n        dataFilterGrouped.planets.filter(\n          (planet) => planet.id === item.aroundPlanet.planet\n        )[0].englishName\n      }`,\n    renderMeta: (item) => {\n      const { id, aroundPlanet, ...meta } = item\n      return meta\n    },\n    minCar: 1,\n    idKey: 'id'\n  }\n}\n\n// The data\nconst dataSearchBox = dataSet.bodies.filter((item) => item.isPlanet === true)\n\n// How you are searching and rendering these data\nconst paramsSearchBox = {\n  renderName: (item) => item.englishName,\n  renderMeta: (item) => item,\n  idKey: 'id'\n}\n\n// The data\nconst dataFilterGroupedDepth = {\n  planets: dataSet.bodies.filter((item) => item.isPlanet === true),\n  satellites: dataSet.bodies\n    .filter((item) => item.isPlanet === false && item.aroundPlanet)\n    .filter((item) => item.englishName)\n}\n\n// How you are searching and rendering these data\nconst paramsSearchFilterGroupedDepth = {\n  planets: {\n    renderName: (item) => item.englishName,\n    renderMeta: (item) => item,\n    //minCar: 3,\n    idKey: 'id'\n  },\n  satellites: {\n    searchDepth: 3,\n    renderName: (item) =>\n      `${item.englishName}, satellite of ${\n        dataFilterGroupedDepth.planets.filter(\n          (planet) => planet.id === item.aroundPlanet.planet\n        )[0].englishName\n      }`,\n    renderMeta: (item) => {\n      const { id, aroundPlanet, ...meta } = item\n      return meta\n    },\n    minCar: 1,\n    idKey: 'id'\n  }\n}\n\n// The data\nconst dataSearchBoxGrouped = {\n  planets: dataSet.bodies.filter((item) => item.isPlanet === true),\n  satellites: dataSet.bodies\n    .filter((item) => item.isPlanet === false && item.aroundPlanet)\n    .filter((item) => item.englishName)\n}\n\n// How you are searching and rendering these data\nconst paramsSearchBoxGrouped = {\n  planets: {\n    renderName: (item) => item.englishName,\n    renderMeta: (item) => item,\n    idKey: 'id'\n  },\n  satellites: {\n    searchDepth: 3,\n    renderName: (item) =>\n      `${item.englishName}, satellite of ${\n        dataSearchBoxGrouped.planets.filter(\n          (planet) => planet.id === item.aroundPlanet.planet\n        )[0].englishName\n      }`,\n    renderMeta: (item) => {\n      const { id, aroundPlanet, ...meta } = item\n      return meta\n    },\n    idKey: 'id'\n  }\n}\n\nconst App = () => {\n  const { filter, filterGrouped, SearchBox, SearchBoxGrouped } = useSearch()\n\n  // filter example\n  const [selectionFilter, setSelectionFilter] = useState('')\n  const [resultsFilter, setResultsFilter] = useState()\n\n  // filter + depth example\n  const [resultsFilterDepth, setResultsFilterDepth] = useState()\n\n  // filterGrouped example\n  const [selectionFilterGrouped, setSelectionFilterGrouped] = useState('')\n  const [resultsFilterGrouped, setResultsFilterGrouped] = useState()\n\n  // filterGrouped + depth example\n  const [resultsFilterGroupedDepth, setResultsFilterGroupedDepth] = useState()\n\n  return (\n    <div\n      style={{\n        padding: '20px',\n        backgroundColor: 'lightgrey',\n        minHeight: '100vh'\n      }}\n    >\n      {/*<h2>Using the styled Search Box</h2>\n      <StyledSearchBox\n        version='light'\n        searchType='strict'\n        data={data}\n        parameters={paramsSearch}\n        suggestions={true}\n        onFilter={(value) => {\n          console.log(value)\n        }}\n        onSelect={(group, value) => {\n          console.log(group, value)\n        }}\n      />\n      <div style={{ borderBottomColor: 'black' }} />\n      <h2>Using the unstyled Search Box</h2>\n      <SearchBox\n        searchType='strict'\n        data={data}\n        parameters={paramsSearch}\n        suggestions={true}\n        onFilter={(value) => {\n          console.log(value)\n        }}\n        onSelect={(group, value) => {\n          console.log(group, value)\n        }}\n      />\n      <div style={{ borderBottomColor: 'black' }} />*/}\n      <h2>Using the hooks + filter</h2>\n      <select\n        style={{ marginRight: '15px' }}\n        onChange={({ target: { value } }) => setSelectionFilter(value)}\n      >\n        <option value=''> -- Select an option -- </option>\n        <option value='earth'>Earth</option>\n        <option value='mars'>Mars</option>\n        <option value='jupiter'>Jupiter</option>\n        <option value='saturn'>Saturn</option>\n        <option value='neptune'>Neptune</option>\n        <option value='uranus'>Uranus</option>\n        <option value='pluto'>Pluto</option>\n      </select>\n      <button\n        type='button'\n        disabled={selectionFilter !== '' ? false : true}\n        onClick={() => {\n          setResultsFilter(\n            filter(dataFilter, paramsSearchFilter, 'strict', selectionFilter)\n          )\n        }}\n      >\n        Search\n      </button>\n      {resultsFilter &&\n        resultsFilter.length > 0 &&\n        resultsFilter.map((item, index) => (\n          <p key={index}>{JSON.stringify(item.metadata)}</p>\n        ))}\n      <div\n        style={{\n          borderBottom: '2px solid black',\n          marginTop: '1vh',\n          marginBottom: '1vh'\n        }}\n      />\n      <h2>Using the hooks + filter + depth</h2>\n      <input\n        placeholder='Search anything...'\n        style={{ marginRight: '15px' }}\n        onChange={({ target: { value } }) =>\n          setResultsFilterDepth(\n            filter(dataFilterDepth, paramsSearchFilterDepth, 'strict', value)\n          )\n        }\n      />\n      {resultsFilterDepth &&\n        resultsFilterDepth.length > 0 &&\n        resultsFilterDepth.map((item, index) => (\n          <p key={index}>{JSON.stringify(item.metadata)}</p>\n        ))}\n      <div\n        style={{\n          borderBottom: '2px solid black',\n          marginTop: '1vh',\n          marginBottom: '1vh'\n        }}\n      />\n      <h2>Using the hooks + filterGrouped</h2>\n      <select\n        style={{ marginRight: '15px' }}\n        onChange={({ target: { value } }) => setSelectionFilterGrouped(value)}\n      >\n        <option value=''> -- Select an option -- </option>\n        <option value='earth'>Earth's moons</option>\n        <option value='mars'>Mars's moons</option>\n        <option value='jupiter'>Jupiter's moons</option>\n        <option value='saturn'>Saturn's moons</option>\n        <option value='neptune'>Neptune's moons</option>\n        <option value='uranus'>Uranus's moons</option>\n        <option value='pluto'>Pluto's moons</option>\n      </select>\n      <button\n        type='button'\n        disabled={selectionFilterGrouped !== '' ? false : true}\n        onClick={() => {\n          setResultsFilterGrouped(\n            filterGrouped(\n              dataFilterGrouped,\n              paramsSearchFilterGrouped,\n              'strict',\n              selectionFilterGrouped\n            )\n          )\n        }}\n      >\n        Search\n      </button>\n      {resultsFilterGrouped &&\n        resultsFilterGrouped.planets[0].metadata.moons.length > 0 &&\n        resultsFilterGrouped.planets[0].metadata.moons.map((item, index) => (\n          <p key={index}>{JSON.stringify(item)}</p>\n        ))}\n      <div\n        style={{\n          borderBottom: '2px solid black',\n          marginTop: '1vh',\n          marginBottom: '1vh'\n        }}\n      />\n      <h2>Using the hooks + filterGrouped + depth</h2>\n      <input\n        placeholder='Search anything...'\n        style={{ marginRight: '15px' }}\n        onChange={({ target: { value } }) =>\n          setResultsFilterGroupedDepth(\n            filterGrouped(\n              dataFilterGroupedDepth,\n              paramsSearchFilterGroupedDepth,\n              'strict',\n              value\n            )\n          )\n        }\n      />\n      <p>\n        {resultsFilterGroupedDepth &&\n          (resultsFilterGroupedDepth.planets.length > 0 ||\n            resultsFilterGroupedDepth.satellites.length > 0) &&\n          JSON.stringify(resultsFilterGroupedDepth)}\n      </p>\n      <div\n        style={{\n          borderBottom: '2px solid black',\n          marginTop: '1vh',\n          marginBottom: '1vh'\n        }}\n      />\n      <h2>Using the unstyled Search Box</h2>\n      <SearchBox\n        searchType='strict'\n        data={dataSearchBox}\n        parameters={paramsSearchBox}\n        suggestions={true}\n        onFilter={(value) => {\n          console.log(value)\n        }}\n        onSelect={(group, value) => {\n          console.log(group, value)\n        }}\n      />\n      <div\n        style={{\n          borderBottom: '2px solid black',\n          marginTop: '1vh',\n          marginBottom: '1vh'\n        }}\n      />\n      <h2>Using the unstyled Grouped Search Box</h2>\n      <SearchBoxGrouped\n        searchType='strict'\n        data={dataSearchBoxGrouped}\n        parameters={paramsSearchBoxGrouped}\n        suggestions={true}\n        onFilter={(value) => {\n          console.log(value)\n        }}\n        onSelect={(group, value) => {\n          console.log(group, value)\n        }}\n      />\n      <div\n        style={{\n          borderBottom: '2px solid black',\n          marginTop: '1vh',\n          marginBottom: '1vh'\n        }}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}